# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2018-06-07 12:19
from __future__ import unicode_literals

from django.contrib.auth.models import Group, Permission, User
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations
from django.contrib.contenttypes.models import ContentType
from django.core.management.sql import emit_post_migrate_signal

def create_group(name):
    group, created = Group.objects.get_or_create(name=name)
    if created:
        print ('... created group "{}"'.format (name))
        return group
    else:
        print ('!!! group "{}" already exists'.format(name))
        return False

def delete_group(name):
    try:
        Group.objects.get(name=name).delete ()
        print ('... deleted group "{}"'.format(name))
    except ObjectDoesNotExist:
        print ('!!! group "{}" doesn\'t exist'.format(name))

def init_team_and_permission(apps, schema_editor):
    print ()

    team  = create_group('Agora Prüfteam')

    if team:
        ct = ContentType.objects.get_for_model(apps.get_model('initproc', 'Moderation'))
        permission, created = Permission.objects.get_or_create(
            codename='add_review',
            name='Can add review',
            content_type=ct
        )
        team.permissions.add (permission)
        print ('... added permission for group "Agora Prüfteam" to add review')

def reverse_team_and_permission(apps, schema_editor):

    delete_group('Agora Prüfteam')

class Migration(migrations.Migration):

    dependencies = [
        ('initproc', '0044_auto_20210102_1829'),
    ]

    operations = [
        migrations.RunPython(init_team_and_permission,
                             reverse_code=reverse_team_and_permission),
    ]
